#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π ISIC —Å Google Drive
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É checkpoints/ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥–µ–ª–∏
"""

import os
import sys
import requests
import zipfile
from pathlib import Path
from tqdm import tqdm
import shutil

def download_file_from_drive(file_id, output_path, chunk_size=8192):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª —Å Google Drive –ø–æ ID"""
    url = f"https://drive.google.com/uc?id={file_id}&export=download"
    
    try:
        response = requests.get(url, stream=True)
        response.raise_for_status()
        
        total_size = int(response.headers.get('content-length', 0))
        
        with open(output_path, 'wb') as f:
            with tqdm(total=total_size, unit='B', unit_scale=True, desc=output_path.name) as pbar:
                for chunk in response.iter_content(chunk_size=chunk_size):
                    if chunk:
                        f.write(chunk)
                        pbar.update(len(chunk))
        
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {output_path.name}: {e}")
        return False

def extract_zip(zip_path, extract_to):
    """–†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç ZIP –∞—Ä—Ö–∏–≤"""
    try:
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            zip_ref.extractall(extract_to)
        print(f"‚úì –†–∞—Å–ø–∞–∫–æ–≤–∞–Ω –∞—Ä—Ö–∏–≤: {zip_path.name}")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ {zip_path.name}: {e}")
        return False

def main():
    print("üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π ISIC —Å Google Drive")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É checkpoints –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    checkpoints_dir = Path("checkpoints")
    checkpoints_dir.mkdir(exist_ok=True)
    
    # ID —Ñ–∞–π–ª–æ–≤ –Ω–∞ Google Drive
    models_to_download = {
        "models_checkpoints.zip": "1kTIHp98AuvLmee5LahH-hZQqXQik_B1U"  # ID —Ñ–∞–π–ª–∞ —Å Google Drive
    }
    
    print("üìÅ –ü–∞–ø–∫–∞ checkpoints/ —Å–æ–∑–¥–∞–Ω–∞/–Ω–∞–π–¥–µ–Ω–∞")
    print(f"üì• –ë—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(models_to_download)}")
    print()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
    for filename, file_id in models_to_download.items():
        output_path = checkpoints_dir / filename
        
        print(f"üì• –ó–∞–≥—Ä—É–∂–∞—é: {filename}")
        if download_file_from_drive(file_id, output_path):
            print(f"‚úì –ó–∞–≥—Ä—É–∂–µ–Ω: {filename}")
            
            # –ï—Å–ª–∏ —ç—Ç–æ ZIP –∞—Ä—Ö–∏–≤, —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º
            if filename.endswith('.zip'):
                print(f"üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—é: {filename}")
                if extract_zip(output_path, checkpoints_dir):
                    # –£–¥–∞–ª—è–µ–º ZIP –ø–æ—Å–ª–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
                    output_path.unlink()
                    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω –∞—Ä—Ö–∏–≤: {filename}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {filename}")
            return False
    
    print()
    print("üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìÅ –ú–æ–¥–µ–ª–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ: checkpoints/")
    print()
    print("üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ checkpoints/:")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    for item in checkpoints_dir.iterdir():
        if item.is_file():
            size_mb = item.stat().st_size / (1024 * 1024)
            print(f"  üìÑ {item.name} ({size_mb:.1f} –ú–ë)")
        elif item.is_dir():
            print(f"  üìÅ {item.name}/")
    
    print()
    print("‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å ISICGUI!")
    return True

if __name__ == "__main__":
    try:
        success = main()
        if not success:
            sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
